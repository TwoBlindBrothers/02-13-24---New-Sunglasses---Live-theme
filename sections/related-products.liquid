{% assign related_products = '' %}

{% for tag in product.tags %}
    {% if tag contains 'related-' %}
        {% assign product_handle = tag | remove: 'related-' %}
        {% assign related_products = related_products | append: ',' | append: product_handle %}
    {% endif %}
{% endfor %}

{% assign related_products = related_products | remove_first: ',' | split: ',' %}

<div class="grid-uniform bg-white product-recommendations" data-product-id="{{ product.id }}" data-limit="4">
    {%- if recommendations.products_count > 0 -%}

        <div id="related-products-container" class="related-products-collection">

            <div class="wrapper">

                {% if product.metafields.c_f.related_products_title %}
                    <h2 class="text-center">{{ product.metafields.c_f.related_products_title }}</h2>
                {% else %}
                    <h2 class="text-center h2">More Products You'll Love</h2>
                {% endif %}

                <div class="grid-flex products-grid">
                    {% assign product_limit = 4 %}
                    {% assign product_count = 0 %}
                    {%- for product in recommendations.products -%}
                        {% if product_count >= product_limit %}
                            {% continue %}
                        {% endif %}
                        {% unless product.type == 'shopblind' %}
                            {% render 'product-grid-item', product: product, grid_item_width: 'one-half large--one-quarter' %}
                            {% assign product_count = product_count | plus: 1 %}
                        {% endunless %}
                    {%- endfor -%}
                </div>

            </div>

        </div>

    {% endif %}
</div>


<script>
    var loadProductRecommendationsIntoSection = function() {
    // Look for an element with class 'product-recommendations'
    var productRecommendationsSection = document.querySelector(".product-recommendations");
    if (productRecommendationsSection === null) { return; }
    // Read product id from data attribute
    var productId = productRecommendationsSection.dataset.productId;
    // Read limit from data attribute
    var limit = productRecommendationsSection.dataset.limit;
    // Build request URL
    var requestUrl = "/recommendations/products?section_id=related-products&limit="+24+"&product_id="+productId;
    // Create request and submit it using Ajax
    var request = new XMLHttpRequest();
    request.open("GET", requestUrl);
    request.onload = function() {
        if (request.status >= 200 && request.status < 300) {
        var container = document.createElement("div");
        container.innerHTML = request.response;
        productRecommendationsSection.parentElement.innerHTML = container.querySelector(".product-recommendations").innerHTML;
        }
    };
    request.send();
    };
    // If your section has theme settings, the theme editor
    // reloads the section as you edit those settings. When that happens, the
    // recommendations need to be fetched again.
    // See https://help.shopify.com/en/themes/development/sections/integration-with-theme-editor
    document.addEventListener("shopify:section:load", function(event) {
    if (event.detail.sectionId === "related-products") {
        loadProductRecommendationsIntoSection();
    }
    });
    // Fetching the recommendations on page load
    loadProductRecommendationsIntoSection();
</script>

{% schema %}
    {
        "name": "Related Products",
        "class": "related-products"
    }
{% endschema %}