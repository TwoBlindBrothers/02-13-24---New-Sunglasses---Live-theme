{% comment %}

  Rich snippets (itemscope, itemtype, etc.) for products are a theme requirement,
  and allow search engines to easily understand what the content is.

  For more information on these Scheme.org tags, visit:
    - http://schema.org/docs/gs.html

{% endcomment %}

<div itemscope class="product-info-container remodal-bg" itemtype="http://schema.org/Product">

  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
  <meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">

  {% comment %}
    Get first variant, or deep linked one
  {% endcomment %}
  {% assign current_variant = product.selected_or_first_available_variant %}

  {% comment %}{% include 'breadcrumb' %}{% endcomment %}

  <div class="grid product-single">
    <div class="grid__item large--two-thirds text-center">
      {% if product.images.size > 1 %}
        <div class="grid product-images">
          <div class="grid__item large--three-tenths medium-down--hide product-images-thumbnails">
          {% comment %}
            Create thumbnails if we have more than one product image
          {% endcomment %}
            <ul class="product-single__thumbnails no-bullets thumbnails" id="ProductThumbs">

              {% for image in product.images %}
                {% assign dataColor = image.alt | split: ' - ' | last | remove: ' Hover' | replace: ' ', '-' | replace: '/', '-' | replace: '-&-', '-' %}
                {% capture imgAlt %}{{ shop.name }} - {{product.type }} {{ product.title }} {{ dataColor }}{% endcapture %}
                <li>
                  <a href="{{ image.src | img_url: '1000x' }}" data-image-id="{{ image.id }}" class="product-single__thumbnail
                   {% if product.options.size == 1 %}
                   filter-all
                   {% else %}
                   filter-{{ dataColor }}
                   {% endif %}
                   {% if forloop.first %} active{% endif %}">
                    <img src="{{ image.src | img_url: '450x450', crop: 'top' }}" alt="{{ imgAlt }}" data-image-id="{{ image.id }}">
                  </a>
                </li>
              {% endfor %}

            </ul>

          </div>
          <div class="grid__item large--seven-tenths" style="position: relative;">

            <div id="price-mobile" class="large--hide">
              <span id="ProductPrice" itemprop="price" content="{{ current_variant.price | divided_by: 100.00 }}" class="h2">
                {{ current_variant.price | money_without_trailing_zeros }}
              </span>
              {% if sca_compare_at_price_max > sca_price %}
              <span class="visually-hidden">{{ 'products.general.sale_price' | t }}</span>
              <span id="ComparePrice">
                {% comment %}{{ 'products.product.compare_at' | t }}{% endcomment %}{{ current_variant.compare_at_price | money_without_trailing_zeros }}
              </span>
              {% endif %}
            </div>
            {%comment%}
            <div class="num large--hide"></div>
            {%endcomment%}
            <div class="product-single__photos medium-down--hide" id="ProductPhoto" {% if product.type == 'Gift'%}style="margin-top:60px"{% endif %}>
              {% assign featured_image = current_variant.featured_image | default: product.featured_image %}
              <img class="zoom-image" src="{{ featured_image | img_url: '1000x' }}" alt="{{ imgAlt }}" id="ProductPhotoImg">
              <div class="main-image-navigation" style="display:none;">
                <span class="prev">prev</span>
                <span class="next">next</span>
              </div>
            </div>

            <div id="owl-demo" class="owl-carousel large--hide medium-down--show">
              {% assign dataColorCount = 0 %}
              {% for image in product.images %}
                  {% assign dataColor = image.alt | split: ' - ' | last | remove: ' Hover' | replace: ' ', '-' | replace: '/', '-' | replace: '-&-', '-' %}
                  {% capture imgAlt %}{{ shop.name }} - {{product.type }} {{ product.title }} {{ dataColor }}{% endcapture %}
              {% assign dataColorCount = dataColorCount | plus: 1 %}

              <div class="mthumb filter-{{ dataColor }}" data-color-count="{{ dataColorCount }}">
              <img src="{{ image | product_img_url: '1000x' }}" alt="{{ imgAlt | escape }}">
              </div>
              {% endfor %}
              <div class="owl-controls clickable">
                <div class="owl-buttons">
                    <div class="owl-prev">previous image</div>
                    <div class="owl-next">next image</div>
                </div>
            </div>
            </div>

            <div id="mob-product-images" class="owl-carousel"></div>

            <script>
              $(document).ready(function(){
                var options = {
                  navigation : true, // Show next and prev buttons
                  navigationText: ["",""],
                  slideSpeed : 300,
                  paginationSpeed : 400,
                  singleItem:true,
                  pagination: true,
                  addClassActive: true,
                };
                $("#owl-demo").owlCarousel(options);
                $('#owl-demo .mthumb').clone().appendTo($('#mob-product-images'));

              });
                //Count
                $( window ).on( "load", function() {
                    var totalItems = $('.owl-item').length;
                    var currentIndex = $('div.active').index() + 1;
                    $('.num').html(''+currentIndex+'/'+totalItems+'');

                    $('#owl-demo').bind('slid', function() {
                        currentIndex = $('div.active').index() + 1;
                       $('.num').html(''+currentIndex+'/'+totalItems+'');
                    });
                 });
            </script>

          </div>
        </div>
      {% else %}
        <div class="product-single__photos" id="ProductPhoto">
          {% assign featured_image = current_variant.featured_image | default: product.featured_image %}
          <img src="{{ featured_image | img_url: '1600x' }}" alt="{{ imgAlt }}" id="ProductPhotoImg">
        </div>
      {% endif %}

    </div>

    <div class="grid__item large--one-third product-info">
      <div class="medium-down--hide" style="max-width:320px; margin:0 auto">
        {% unless product.type == 'Gift' %}
            <h1 class="product-title" itemprop="name" id="variantTitle"></h1>
            <span class="h5">{{ product.title }}</span>
        {% else %}
            <h1 class="product-title" itemprop="name"><div style="position:relative;"> {{ product.title }} <div name="secomapp-fg-image-{{ product.id }}" style="display: none;"> {{ "icon-freegift.png" | asset_url | img_tag: "", "sca-fg-img-collect" }} </div> </div></h1>
        {% endunless %}
        <span class="visually-hidden">{{ 'products.general.regular_price' | t }}</span>
        <div id="product-price">
         <span id="ProductPrice_d" itemprop="price" content="{{ current_variant.price | divided_by: 100.00 }}"  class="h2">
            {{ current_variant.price | money_without_trailing_zeros }}
        </span>
          {% if sca_compare_at_price_max > sca_price %}
          <span class="visually-hidden">{{ 'products.general.sale_price' | t }}</span>
          <span id="ComparePrice">
            {% comment %}{{ 'products.product.compare_at' | t }}{% endcomment %}{{ current_variant.compare_at_price | money_without_trailing_zeros }}
          </span>
          {% endif %}
          <span class="shopify-product-reviews-badge" data-id="{{ product.id }}"></span>
        </div>

        <div class="product-description rte" itemprop="description">
          {{ product.description }}
        </div>
      </div>

      <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
        <meta itemprop="priceCurrency" content="{{ shop.currency }}">

        <link itemprop="availability" href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}">

        {% comment %}
          ID addToCartForm is a selector for the ajax cart plugin
        {% endcomment %}
        <form action="/cart/add" data-productid="{{ product.id }}" method="post" enctype="multipart/form-data" id="AddToCartForm" class="form-vertical">

          {% comment %}
            Add product variants as a dropdown.
              - By default, each variant (or combination of variants) will display as its own <option>
              - To separate these into multiple steps, which we suggest, use option_selection.js (see below)

            You can leverage jQuery to add a callback on page load and each time the select element changes:
              - Include option_selection.js (as seen at the bottom of this file)
              - This allows you to use JavaScript anytime the variant dropdown changes
              - This also separates out your variant options (ie. size, color, etc.) to separate select elements

            For more information on products with multiple options, visit:
              - http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#update-product-liquid
          {% endcomment %}
          <select name="id" data-productid="{{ product.id }}" id="productSelect" class="product-single__variants">
            {% for variant in product.variants %}
              {% if variant.available %}

                {% comment %}
                  Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
                {% endcomment %}
                <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} data-sku="{{ variant.sku }}" value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>
              {% else %}
                <option disabled="disabled">
                  {{ variant.title }} - {{ 'products.product.sold_out' | t }}
                </option>
              {% endif %}
            {% endfor %}
          </select>
          {% if product.available %}

            {% for option in product.options %}
              {% include 'swatch' with option %}
            {% endfor %}

          {% endif %}

          {% comment %}
          <label for="Quantity" class="quantity-selector">{{ 'products.product.quantity' | t }}</label>
          <input type="number" id="Quantity" name="quantity" value="1" min="1" class="quantity-selector">
          {% endcomment %}
          <button type="submit" name="add" id="AddToCart" class="btn">
            <span id="AddToCartText">{{ 'products.product.add_to_cart' | t }}</span>
          </button>
        </form>
        <div class="sca-fg-cat-list" style="display: none;" name="secomapp-fg-data-{{ product.id }}"> </div>

        <div class="large--hide">
        {% unless product.type == 'Gift' %}
            <h1 class="product-title" itemprop="name" id="variantTitle_m"></h1>
            <span class="h4">{{ product.title }}</span>
        {% else %}
            <h1 class="product-title" itemprop="name">{{ product.title }}</h1>
        {% endunless %}
          <div class="product-description rte">
            {{ product.description }}
          </div>
        </div>

        {% if product.metafields.c_f.model_info %}
           <div class="product-meta">
            {{ product.metafields.c_f.model_info }}
            </div>
        {% endif %}

        {% if product.type == "Mens" %}
          <a data-remodal-target="mens-size-chart" class="size-chart-link">View Sizing Chart</a>
          {% endif %}
        {% if product.type == "Womens" %}
          <a data-remodal-target="womens-size-chart" class="size-chart-link">View Sizing Chart</a>
        {% endif %}
      </div>
      {% if product.type == "Mens" %}
      <div class="remodal" data-remodal-id="mens-size-chart">
        <button data-remodal-action="close" class="remodal-close"></button>
        <div class="wrapper size-chart">
          <h2>Men's Size Chart</h2>
          <table>
            <thead>
              <th></th>
              <th><h4>S</h4></th>
              <th><h4>M</h4></th>
              <th><h4>L</h4></th>
              <th><h4>XL</h4></th>
            </thead>
            <tr>
              <td><strong>Neck</strong></td>
              <td>14 - 14.5"</td>
              <td>15 - 15.5"</td>
              <td>16 - 16.5"</td>
              <td>17 - 17.5"</td>
            </tr>
            <tr>
              <td><strong>Chest</strong></td>
              <td>34 - 36"</td>
              <td>38 - 40"</td>
              <td>42 - 44"</td>
              <td>46 - 48"</td>
            </tr>
            <tr>
              <td><strong>Sleeve</strong></td>
              <td>32 - 33"</td>
              <td>33 - 34"</td>
              <td>34 - 35"</td>
              <td>35 - 36"</td>
            </tr>
          </table>
        </div>
      </div>
      {% endif %}
      {% if product.type == "Womens" %}
      <div class="remodal" data-remodal-id="womens-size-chart">
        <button data-remodal-action="close" class="remodal-close"></button>
        <div class="wrapper size-chart">
          <h2>Women's Size Chart</h2>
          <table>
            <thead>
              <th></th>
              <th><h4>XS</h4></th>
              <th><h4>S</h4></th>
              <th><h4>M</h4></th>
              <th><h4>L</h4></th>
            </thead>
            <tr>
              <td><strong>Bust</strong></td>
              <td>32.5 - 33.5"</td>
              <td>34.5 - 35.5"</td>
              <td>36.5 - 37.5"</td>
              <td>39 - 40.5"</td>
            </tr>
            <tr>
              <td><strong>Waist</strong></td>
              <td>34 - 36"</td>
              <td>38 - 40"</td>
              <td>42 - 44"</td>
              <td>46 - 48"</td>
            </tr>
          </table>
        </div>
      </div>
      {% endif %}
      {% comment %}
        If the user is on a collection product page (ie with /collections/collection-handle/products/product-handle)
        in the URL, we can show next/previous links to other products in the collection.

      {% if collection %}
        {% if collection.previous_product or collection.next_product %}
          <p>
            {% if collection.previous_product %}
              <span class="left">
                {{ 'products.general.previous_product_html' | t | link_to: collection.previous_product }}
              </span>
            {% endif %}
            {% if collection.next_product %}
              <span class="right">
                {{ 'products.general.next_product_html' | t | link_to: collection.next_product }}
              </span>
            {% endif %}
          </p>
        {% endif %}
      {% endif %}
 {% endcomment %}
    </div>
  </div>

</div>

{% if collection.handle == 'mens' and section.settings.show_curing_men %}
    {% include 'curing-blindness' %}

{% endif %}
{% if collection.handle == 'womens' and section.settings.show_curing_women %}
    {% include 'curing-blindness' %}

{% endif %}

{% comment %}
{% assign feature_count = section.blocks.size %}
{% assign featureIndex = 0 %}
{% if feature_count == 0 %}
  {% assign feature_count = 6 %}
{% endif %}

<section
  class="grid-masonry
    grid-masonry-feature-count-{{ feature_count }}
    grid-masonry-layout-{{ section.settings.layout }}"
  data-masonry
  data-masonry-layout="{{ section.settings.layout }}"
  data-section-id="{{ section.id }}"
  data-section-type="grid-masonry"
  >
  {% unless section.blocks.size == 0 %}
    {% for block in section.blocks %}

        {% assign featureIndex = featureIndex | plus: 1 %}
        {% assign collectionImage = 'collection-' | append: featureIndex %}
        {% assign heading = block.settings.heading | escape %}
        {% assign subheading = block.settings.subheading | escape %}
        {% assign button = block.settings.button | escape %}
        {% assign url = block.settings.url | escape%}
        {% assign video = block.settings.video | escape%}
        {% assign mobile = block.settings.mobile %}
        {% assign hasimage = block.settings.image %}
        {% capture image %}{{ block.settings.image | img_url: '1440x640' }} {% endcapture %}
        {% assign color = block.settings.color %}
        {% assign bgcolor = block.settings.bgcolor %}

        {% include 'grid-feature' %}

    {% endfor %}
  {% endunless %}
</section>
{% endcomment %}

{% include 'related-products' %}

{% comment %}
  To take advantage of a callback on the select dropdown, add option_selection.js
  and customize the JS in timber.productPage as needed.

  Currently, timber.productPage does the following:
    - Hides your <select> tag from above
    - Breaks out the product variants into separate product options, if more than one exists
    - Generates a <select> tag for each product option
    - Enables/disables elements based on variant availability

  Callback notes:
    - Keep the callback available to the global scope (window.selectCallback) so that advanced
      addons can override it.
      * E.g. multiple currencies http://docs.shopify.com/manual/configuration/store-customization/currencies-and-translations/currencies/how-to-toggle-between-two-currencies
{% endcomment %}
{{ 'option_selection.js' | shopify_asset_url | script_tag }}
<script>
    var selectCallback = function(variant, selector) {
        var filterColor = variant.option1.replace(/ /g, '-').replace('/', ' ').replace(/-&-/g,'-');
        var filterThumbs = function(){
            $(".product-single__thumbnail, .mthumb").css('display', 'none');
            $(".product-single__thumbnails, .owl-carousel").find('.filter-all, .filter-' + filterColor).css('display', '');

            function showThumbsbyVariant(variant) {
                if ( $( "#owl-demo" ).length ) {
                    var owl = $("#owl-demo").data('owlCarousel');

                    owl.addItem('<div/>', 0);

                    var nb = owl.itemsAmount;
                    for (var i = 0; i < (nb - 1); i++) {
                      owl.removeItem(1);
                    }

                    $('#mob-product-images .mthumb.filter-' + filterColor).each(function () {
                      owl.addItem($(this).clone());
                    });
                    owl.removeItem(0);
                }
            }
            showThumbsbyVariant(filterColor);
        }
      filterThumbs();

      // BEGIN SWATCHES
      if (variant) {
          var form = jQuery('#' + selector.domIdPrefix).closest('form');
          for (var i=0,length=variant.options.length; i<length; i++) {
            var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');
            if (radioButton.size()) {
              radioButton.get(0).checked = true;
            }
          }
        }
       // END SWATCHES
        timber.productPage({
          money_format: "{{ shop.money_format }}",
          variant: variant,
          selector: selector
        });
  };

  jQuery(function($) {
    new Shopify.OptionSelectors('productSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallback,
      enableHistoryState: true
    });

    // $('.next').click(function() {
    //   var $current = $('.thumb.active'); // active thumb
    //   var $thumbs = $('.thumb'); // find other thumbs
    //   var $next = $thumbs.eq($thumbs.index($current) + 1); // next thumb
    //   $($next).trigger('click');
    //   $($current).removeClass('active');
    // });

    // $('.prev').click(function() {
    //   var $current = $('.thumb.active'); // active thumb
    //   var $thumbs = $('.thumb'); // find other thumbs
    //   var $previous = $thumbs.eq($thumbs.index($current) - 1); // prev thumb
    //   $($previous).trigger('click');
    // });

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label for="productSelect-option-0">{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% endif %}
  });
</script>
